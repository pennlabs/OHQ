# Generated by Django 2.2.7 on 2019-11-09 04:03

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('semester', models.CharField(choices=[('FALL', 'FALL'), ('SPRING', 'SPRING'), ('SUMMER', 'SUMMER')], max_length=6)),
                ('is_archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('STUDENT', 'STUDENT'), ('TA', 'TA'), ('HEAD_TA', 'HEAD_TA'), ('PROFESSOR', 'PROFESSOR'), ('ADMIN', 'ADMIN')], max_length=9)),
                ('is_deactivated', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_users', to='api.Course')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('order_key', models.IntegerField()),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.feedbackquestion_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('preferred_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='RadioButtonFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choice', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='RadioButtonFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), size=None)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='ShortAnswerFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_text', models.TextField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='ShortAnswerFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='SliderFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choice', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='SliderFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_lower_bound', models.IntegerField()),
                ('answer_upper_bound', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('estimated_wait_time', models.IntegerField(default=0)),
                ('start_end_times', models.CharField(max_length=100)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='api.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('time_asked', models.DateTimeField()),
                ('time_last_updated', models.DateTimeField(blank=True, null=True)),
                ('time_answered', models.DateTimeField(blank=True, null=True)),
                ('time_withdrawn', models.DateTimeField(blank=True, null=True)),
                ('time_rejected', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('rejected_reason', models.CharField(blank=True, choices=[('OTHER', 'OTHER'), ('NOT_HERE', 'NOT_HERE'), ('OH_ENDED', 'OH_ENDED'), ('NOT_SPECIFIC', 'NOT_SPECIFIC'), ('WRONG_QUEUE', 'WRONG_QUEUE')], max_length=12, null=True)),
                ('answerer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answered_questions', to='api.CourseUser')),
                ('asker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asked_questions', to='api.CourseUser')),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.Queue')),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_questions', to='api.CourseUser')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.feedbackanswer_set+', to='contenttypes.ContentType')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.FeedbackQuestion')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='courseuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_users', to='api.User'),
        ),
    ]
