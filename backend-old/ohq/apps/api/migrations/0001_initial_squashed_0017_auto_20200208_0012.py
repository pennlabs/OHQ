# Generated by Django 2.2.7 on 2020-02-08 00:13

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_queue_archived'), ('api', '0003_authuser_email'), ('api', '0004_feedbackquestion_course'), ('api', '0005_auto_20200201_2027'), ('api', '0006_auto_20200201_2032'), ('api', '0007_auto_20200201_2106'), ('api', '0008_auto_20200202_0540'), ('api', '0009_auto_20200203_0404'), ('api', '0010_auto_20200203_1527'), ('api', '0011_auto_20200203_1638'), ('api', '0012_feedbackquestion_required'), ('api', '0013_courseuser_invited_by'), ('api', '0014_auto_20200205_0418'), ('api', '0015_auto_20200206_2027'), ('api', '0016_auto_20200208_0012'), ('api', '0017_auto_20200208_0012')]

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firebase_uid', models.CharField(editable=False, max_length=40, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('description', models.CharField(default='', max_length=250)),
                ('year', models.IntegerField()),
                ('semester', models.CharField(choices=[('FALL', 'FALL'), ('SPRING', 'SPRING'), ('SUMMER', 'SUMMER')], max_length=6)),
                ('is_archived', models.BooleanField(default=False)),
                ('invite_only', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('order_key', models.IntegerField()),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.feedbackquestion_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RadioButtonFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choice', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='RadioButtonFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choices', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), size=None)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='ShortAnswerFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_text', models.TextField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='ShortAnswerFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='SliderFeedbackAnswer',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_choice', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='SliderFeedbackQuestion',
            fields=[
                ('feedbackquestion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackQuestion')),
                ('answer_lower_bound', models.IntegerField()),
                ('answer_upper_bound', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.feedbackquestion',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('preferred_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('time_joined', models.DateTimeField(auto_now_add=True)),
                ('auth_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('estimated_wait_time', models.IntegerField(default=0)),
                ('start_end_times', models.CharField(max_length=100)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='api.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), size=None)),
                ('time_asked', models.DateTimeField()),
                ('time_last_updated', models.DateTimeField(blank=True, null=True)),
                ('time_started', models.DateTimeField(blank=True, null=True)),
                ('time_answered', models.DateTimeField(blank=True, null=True)),
                ('time_withdrawn', models.DateTimeField(blank=True, null=True)),
                ('time_rejected', models.DateTimeField(blank=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('rejected_reason', models.CharField(blank=True, choices=[('OTHER', 'OTHER'), ('NOT_HERE', 'NOT_HERE'), ('OH_ENDED', 'OH_ENDED'), ('NOT_SPECIFIC', 'NOT_SPECIFIC'), ('WRONG_QUEUE', 'WRONG_QUEUE')], max_length=12, null=True)),
                ('answered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answered_questions', to='api.User')),
                ('asked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asked_questions', to='api.User')),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.Queue')),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_questions', to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='InvitedCourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('kind', models.CharField(choices=[('STUDENT', 'STUDENT'), ('TA', 'TA'), ('HEAD_TA', 'HEAD_TA'), ('PROFESSOR', 'PROFESSOR'), ('ADMIN', 'ADMIN')], max_length=9)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invited_course_users', to='api.Course')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_users', to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.feedbackanswer_set+', to='contenttypes.ContentType')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.FeedbackQuestion')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('STUDENT', 'STUDENT'), ('TA', 'TA'), ('HEAD_TA', 'HEAD_TA'), ('PROFESSOR', 'PROFESSOR'), ('ADMIN', 'ADMIN')], max_length=9)),
                ('is_deactivated', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_users', to='api.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_users', to='api.User')),
            ],
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('name', 'department', 'year'), name='unique_course_name'),
        ),
        migrations.AddField(
            model_name='authuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='authuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='queue',
            constraint=models.UniqueConstraint(fields=('course', 'name'), name='unique_queue_name'),
        ),
        migrations.AddConstraint(
            model_name='invitedcourseuser',
            constraint=models.UniqueConstraint(fields=('course', 'email'), name='unique_invited_course_user'),
        ),
        migrations.AddConstraint(
            model_name='courseuser',
            constraint=models.UniqueConstraint(fields=('course', 'user'), name='unique_course_user'),
        ),
        migrations.AddField(
            model_name='queue',
            name='archived',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='authuser',
            name='email',
            field=models.EmailField(default='stevenbursztyn@gmail.com', max_length=254),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='course',
            field=models.ForeignKey(default='69c95810-07bf-4f75-9ef2-9a62de1c90d0', on_delete=django.db.models.deletion.CASCADE, related_name='feedback_questions', to='api.Course'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='question',
            name='is_rejected',
        ),
        migrations.AddField(
            model_name='question',
            name='rejected_reason_other',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='question_text',
            field=models.CharField(editable=False, max_length=200),
        ),
        migrations.AlterField(
            model_name='question',
            name='time_asked',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RenameField(
            model_name='course',
            old_name='is_archived',
            new_name='archived',
        ),
        migrations.RenameField(
            model_name='feedbackquestion',
            old_name='is_active',
            new_name='archived',
        ),
        migrations.AlterField(
            model_name='radiobuttonfeedbackquestion',
            name='answer_choices',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), editable=False, size=None),
        ),
        migrations.AlterField(
            model_name='sliderfeedbackquestion',
            name='answer_lower_bound',
            field=models.IntegerField(editable=False),
        ),
        migrations.AlterField(
            model_name='sliderfeedbackquestion',
            name='answer_upper_bound',
            field=models.IntegerField(editable=False),
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='archived',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveConstraint(
            model_name='course',
            name='unique_course_name',
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.UniqueConstraint(fields=('name', 'department', 'year', 'semester'), name='unique_course_name'),
        ),
        migrations.AlterField(
            model_name='feedbackanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_answers', to='api.FeedbackQuestion'),
        ),
        migrations.AddField(
            model_name='feedbackanswer',
            name='feedback_question',
            field=models.ForeignKey(default='69c95810-07bf-4f75-9ef2-9a62de1c90d0', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.FeedbackQuestion'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='feedbackanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_answers', to='api.Question'),
        ),
        migrations.RemoveField(
            model_name='radiobuttonfeedbackanswer',
            name='feedbackquestion_ptr',
        ),
        migrations.RemoveField(
            model_name='shortanswerfeedbackanswer',
            name='feedbackquestion_ptr',
        ),
        migrations.RemoveField(
            model_name='sliderfeedbackanswer',
            name='feedbackquestion_ptr',
        ),
        migrations.AddField(
            model_name='radiobuttonfeedbackanswer',
            name='feedbackanswer_ptr',
            field=models.OneToOneField(auto_created=True, default=0, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackAnswer'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='shortanswerfeedbackanswer',
            name='feedbackanswer_ptr',
            field=models.OneToOneField(auto_created=True, default=0, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackAnswer'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sliderfeedbackanswer',
            name='feedbackanswer_ptr',
            field=models.OneToOneField(auto_created=True, default=0, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.FeedbackAnswer'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='feedbackquestion',
            name='required',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='courseuser',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_course_users', to='api.User'),
        ),
        migrations.RenameField(
            model_name='courseuser',
            old_name='is_deactivated',
            new_name='deactivated',
        ),
        migrations.AlterField(
            model_name='feedbackquestion',
            name='question_text',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='radiobuttonfeedbackquestion',
            name='answer_choices',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), size=None),
        ),
        migrations.AlterField(
            model_name='sliderfeedbackquestion',
            name='answer_lower_bound',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='sliderfeedbackquestion',
            name='answer_upper_bound',
            field=models.IntegerField(),
        ),
        migrations.RemoveField(
            model_name='queue',
            name='start_end_times',
        ),
        migrations.AddField(
            model_name='queue',
            name='start_end_times',
            field=django.contrib.postgres.fields.jsonb.JSONField(default=[]),
        ),
    ]
